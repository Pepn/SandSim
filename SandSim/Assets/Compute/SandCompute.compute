#pragma kernel CSMain

static const int numThreads = 8;
static const float4 empty = float4(0.0f, 0.0f, 0.0f, 0.0f);

int Resolution;
RWTexture2D<float4> Result;
RWStructuredBuffer<int> spawnSandBuffer;

[numthreads(numThreads, numThreads, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{    
    // Calculate the 1D index based on the 2D coordinates
    int index = id.y * Resolution + id.x;
    
    Result[id.xy] = float4(Result[id.xy].r + spawnSandBuffer[index], 0.0f, 0.0f, 0.0);
    
    int width = Resolution;
    int height = Resolution;
    
    for (int y = 0; y < height - 1; ++y)
    {
        // Read the pixel value from the current position
        float4 pixelValue = Result[id.xy];
        if (Result[int2(id.x, id.y - 1)].r == empty.r)
        {
            Result[int2(id.x, id.y - 1)] = Result[id.xy];
            Result[id.xy] = empty;
        }
    }

    // For the last row, write the value from the buffer
    //if (id.y == height - 1)
    //{
    //    int index = id.x + (height - 1) * width;
    //    Result[id.xy] = float4(sandBuffer[index], 0.0f, 0.0f, 1.0f);
    //}
}
